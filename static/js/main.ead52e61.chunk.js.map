{"version":3,"sources":["state/lists/actions.js","state/lists/reducer.js","state/movies/actions.js","state/movies/reducer.js","state/reducers.js","api/api.js","state/lists/selectors.js","state/movies/selectors.js","state/movies/sagas.js","state/sagas.js","state/store.js","view/HideOnScroll.js","view/ListItem.js","view/Lists.js","view/Movies.js","view/Search.js","view/App.js","index.js"],"names":["createActions","ADD_LIST","id","Date","now","RENAME_LIST","label","DELETE_LIST","SET_ACTIVE_LIST","ADD_MOVIE_TO_ACTIVE_LIST","movieId","REMOVE_MOVIE_FROM_ACTIVE_LIST","MOVE_MOVIE_UP_IN_ACTIVE_LIST","MOVE_MOVIE_DOWN_IN_ACTIVE_LIST","addList","addMovieToActiveList","deleteList","moveMovieDownInActiveList","moveMovieUpInActiveList","removeMovieFromActiveList","renameList","setActiveList","defaultState","items","movies","active","listsReducer","produce","draftState","action","payload","type","activeItem","find","item","toString","push","filter","length","undefined","every","index","indexOf","slice","SET_IS_SEARCH_FETCHING","isFetching","MOVIE_SEARCH_RESULT_RECEIVED","key","MOVIE_RECEIVED","movie","SET_SEARCH_VALUE","value","FETCH_MOVIE","fetchMovie","movieReceived","movieSearchResultReceived","setIsSearchFetching","setSearchValue","tt0111161","poster","title","year","genre","imdbId","rating","searchKeys","currentSearchValue","isSearchFetching","moviesReducer","combineReducers","lists","omdbApiKey","process","REACT_APP_OMDB_API_KEY","request","url","window","fetch","then","res","ok","json","Promise","reject","transformMovie","Genre","imdbID","Poster","imdbRating","Title","Year","searchMovies","Search","map","getMovie","getLists","state","getActiveList","getMovies","getMoviesForActiveList","createSelector","activeList","getResultForMovieSearch","getSearchValue","getOptionsForCurrentSearch","options","trim","searchMoviesSaga","trimmedKey","result","select","put","race","cancel","take","timeout","delay","call","api","error","console","watchSearchValue","takeEvery","fetchMovieSaga","watchFetchMovie","rootSaga","all","configureStore","preloadedState","sagaMiddleware","createSagaMiddleware","loggerMiddleware","createLogger","collapsed","store","createStore","rootReducer","applyMiddleware","run","HideOnScroll","children","trigger","useScrollTrigger","Slide","appear","direction","in","useStyles","makeStyles","height","opacity","button","backgroundColor","edit","width","textField","margin","input","borderBottomColor","deleteButton","ListItem","isNewItem","classes","inputEl","useRef","useEffect","current","focus","ContainerProps","className","onClick","Box","TextField","InputProps","inputRef","onChange","event","target","placeholder","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","edge","header","display","justifyContent","alignItems","Lists","prevLists","Typography","variant","color","Paper","List","component","Boolean","list","defaultProps","mapDispatchToProps","listActions","connect","root","overflow","row","loading","cell","padding","iconCell","position","icons","left","transform","flexDirection","moveDown","moveUp","remove","columns","content","fontSize","src","alt","Link","href","stickyHeader","TableHead","TableRow","TableCell","TableBody","movieActions","setValue","isLoading","my","filterOption","selected","onInputChange","newValue","minHeight","footer","App","CssBaseline","AppBar","Toolbar","Container","Grid","container","spacing","xs","md","lg","Movies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ead52e61.chunk.js","sourcesContent":["import { createActions } from 'redux-actions';\n\nexport const {\n  addList,\n  addMovieToActiveList,\n  deleteList,\n  moveMovieDownInActiveList,\n  moveMovieUpInActiveList,\n  removeMovieFromActiveList,\n  renameList,\n  setActiveList,\n} = createActions({\n  ADD_LIST: () => ({ id: Date.now() }),\n\n  /**\n   * @param {number} id\n   * @param {string} label\n   */\n  RENAME_LIST: (id, label) => ({ id, label }),\n\n  /**\n   * @param {number} id\n   */\n  DELETE_LIST: id => ({ id }),\n\n  /**\n   * @param {number} id\n   */\n  SET_ACTIVE_LIST: id => ({ id }),\n\n  /**\n   * @param {number} movieId\n   */\n  ADD_MOVIE_TO_ACTIVE_LIST: movieId => ({ movieId }),\n\n  /**\n   * @param {number} movieId\n   */\n  REMOVE_MOVIE_FROM_ACTIVE_LIST: movieId => ({ movieId }),\n\n  /**\n   * @param {number} movieId\n   */\n  MOVE_MOVIE_UP_IN_ACTIVE_LIST: movieId => ({ movieId }),\n\n  /**\n   * @param {number} movieId\n   */\n  MOVE_MOVIE_DOWN_IN_ACTIVE_LIST: movieId => ({ movieId }),\n});\n","import produce from 'immer';\n\nimport {\n  addList,\n  addMovieToActiveList,\n  deleteList,\n  moveMovieDownInActiveList,\n  moveMovieUpInActiveList,\n  removeMovieFromActiveList,\n  renameList,\n  setActiveList,\n} from './actions';\n\nconst id = Date.now();\nexport const defaultState = {\n  items: [\n    { id, label: 'Favourites', movies: ['tt0111161'] },\n    { id: 2, label: 'Watchlist', movies: [] },\n  ],\n  active: id,\n};\n\n// eslint-disable-next-line consistent-return\nconst listsReducer = produce((draftState = defaultState, action) => {\n  const { payload, type } = action;\n  const activeItem = draftState.items.find(\n    item => item.id === draftState.active,\n  );\n\n  switch (type) {\n    case addList.toString():\n      draftState.active = payload.id;\n      draftState.items.push({ id: payload.id, label: '', movies: [] });\n      break;\n\n    case renameList.toString():\n      draftState.items.find(item => item.id === payload.id).label =\n        payload.label;\n      break;\n\n    case deleteList.toString():\n      draftState.items = draftState.items.filter(\n        item => item.id !== payload.id,\n      );\n      if (draftState.active === payload.id) {\n        draftState.active = draftState.items.length\n          ? draftState.items[0].id\n          : undefined;\n      }\n      break;\n\n    case setActiveList.toString():\n      draftState.active = payload.id;\n      break;\n\n    case addMovieToActiveList.toString():\n      if (activeItem.movies.every(movieId => movieId !== payload.movieId)) {\n        activeItem.movies.push(payload.movieId);\n      }\n      break;\n\n    case removeMovieFromActiveList.toString():\n      activeItem.movies = activeItem.movies.filter(\n        movieId => movieId !== payload.movieId,\n      );\n      break;\n\n    case moveMovieUpInActiveList.toString(): {\n      const { movies } = activeItem;\n      const index = movies.indexOf(payload.movieId);\n      if (index === 0) {\n        activeItem.movies = [...movies.slice(1), movies[0]];\n      } else {\n        activeItem.movies = [\n          ...movies.slice(0, index - 1),\n          movies[index],\n          movies[index - 1],\n          ...movies.slice(index + 1),\n        ];\n      }\n      break;\n    }\n\n    case moveMovieDownInActiveList.toString(): {\n      const { movies } = activeItem;\n      const index = movies.indexOf(payload.movieId);\n      if (index === movies.length - 1) {\n        activeItem.movies = [movies[movies.length - 1], ...movies.slice(0, -1)];\n      } else {\n        activeItem.movies = [\n          ...movies.slice(0, index),\n          movies[index + 1],\n          movies[index],\n          ...movies.slice(index + 2),\n        ];\n      }\n      break;\n    }\n\n    default:\n      return draftState;\n  }\n});\n\nexport default listsReducer;\n","import { createActions } from 'redux-actions';\n\nexport const {\n  fetchMovie,\n  movieReceived,\n  movieSearchResultReceived,\n  setIsSearchFetching,\n  setSearchValue,\n} = createActions({\n  /**\n   * @param {boolean} isFetching\n   */\n  SET_IS_SEARCH_FETCHING: isFetching => ({ isFetching }),\n\n  /**\n   * @param {string} key\n   * @param {Object[]} result\n   */\n  MOVIE_SEARCH_RESULT_RECEIVED: (key, movies) => ({ key, movies }),\n\n  /**\n   * @param {Object} movie\n   */\n  MOVIE_RECEIVED: movie => ({ movie }),\n\n  /**\n   * @param {string} value\n   */\n  SET_SEARCH_VALUE: value => ({ value }),\n\n  // Actions handled only by sagas\n\n  /**\n   * @param {string} id\n   */\n  FETCH_MOVIE: id => ({ id }),\n});\n","import produce from 'immer';\n\nimport {\n  movieReceived,\n  movieSearchResultReceived,\n  setIsSearchFetching,\n  setSearchValue,\n} from './actions';\n\nexport const defaultState = {\n  items: {\n    tt0111161: {\n      poster:\n        'https://m.media-amazon.com/images/M/MV5BMDFkYTc0MGEtZmNhMC00ZDIzLWFmNTEtODM1ZmRlYWMwMWFmXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg',\n      title: 'The Shawshank Repemption',\n      year: '1994',\n      genre: 'Drama',\n      imdbId: 'tt0111161',\n      rating: '9.3',\n    },\n  },\n  searchKeys: {},\n  currentSearchValue: '',\n  isSearchFetching: false,\n};\n\n// eslint-disable-next-line consistent-return\nconst moviesReducer = produce((draftState = defaultState, action) => {\n  const { payload, type } = action;\n\n  switch (type) {\n    case setIsSearchFetching.toString():\n      draftState.isSearchFetching = payload.isFetching;\n      break;\n\n    case movieSearchResultReceived.toString():\n      draftState.searchKeys[payload.key] = payload.movies;\n      break;\n\n    case movieReceived.toString():\n      draftState.items[payload.movie.imdbId] = payload.movie;\n      break;\n\n    case setSearchValue.toString():\n      draftState.currentSearchValue = payload.value;\n      break;\n\n    default:\n      return draftState;\n  }\n});\n\nexport default moviesReducer;\n","import { combineReducers } from 'redux';\n\nimport lists from './lists/reducer';\nimport movies from './movies/reducer';\n\nexport default combineReducers({ lists, movies });\n","const omdbApiKey = process.env.REACT_APP_OMDB_API_KEY || 'de26953c';\n\nconst request = url =>\n  window.fetch(url).then(res => (res.ok ? res.json() : Promise.reject(res)));\n\nconst transformMovie = movie => ({\n  genre: movie.Genre,\n  imdbId: movie.imdbID,\n  poster: movie.Poster,\n  rating: movie.imdbRating,\n  title: movie.Title,\n  year: movie.Year,\n});\n\n/**\n * @param {string} key\n */\nexport const searchMovies = key =>\n  request(\n    `http://www.omdbapi.com/?apikey=${omdbApiKey}&type=movie&s=${key}`,\n  ).then(({ Search }) => (Search ? Search.map(transformMovie) : []));\n\n/**\n * @param {string} id\n */\nexport const getMovie = id =>\n  request(\n    `http://www.omdbapi.com/?apikey=${omdbApiKey}&type=movie&i=${id}`,\n  ).then(transformMovie);\n","export const getLists = state => state.lists.items;\n\nexport const getActiveList = state => state.lists.active;\n","import { createSelector } from 'reselect';\n\nimport { getLists, getActiveList } from '../lists/selectors';\n\nexport const getMovies = state => state.movies.items;\n\nexport const getMoviesForActiveList = createSelector(\n  getLists,\n  getActiveList,\n  getMovies,\n  (lists, activeList, movies) => {\n    if (activeList === undefined) {\n      return [];\n    }\n    return lists\n      .find(({ id }) => id === activeList)\n      .movies.map(movieId => {\n        const movieData = movies[movieId];\n        return movieData || { imdbId: movieId };\n      });\n  },\n);\n\nexport const getResultForMovieSearch = (state, { key }) =>\n  state.movies.searchKeys[key];\n\nexport const getSearchValue = state => state.movies.currentSearchValue;\n\nexport const getOptionsForCurrentSearch = state => {\n  const value = getSearchValue(state);\n  const options = getResultForMovieSearch(state, { key: value.trim() });\n\n  return options\n    ? options.map(({ title, year, imdbId }) => ({\n        value: imdbId,\n        label: `${title} (${year})`,\n      }))\n    : [];\n};\n\nexport const isSearchFetching = state => state.movies.isSearchFetching;\n","import {\n  call,\n  delay,\n  put,\n  race,\n  select,\n  take,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport * as api from 'api/api';\nimport { addMovieToActiveList } from '../lists/actions';\nimport {\n  fetchMovie,\n  movieReceived,\n  movieSearchResultReceived,\n  setIsSearchFetching,\n  setSearchValue,\n} from './actions';\nimport { getMovies, getResultForMovieSearch } from './selectors';\n\nfunction* searchMoviesSaga(action) {\n  const trimmedKey = action.payload.value.trim();\n  const result = getResultForMovieSearch(yield select(), { key: trimmedKey });\n\n  if (trimmedKey.length < 3 || result) {\n    yield put(setIsSearchFetching(false));\n    return;\n  }\n\n  yield put(setIsSearchFetching(true));\n\n  const { cancel } = yield race({\n    cancel: take(action.type),\n    timeout: delay(400),\n  });\n\n  if (cancel) {\n    return;\n  }\n\n  try {\n    const movies = yield call(api.searchMovies, trimmedKey);\n    yield put(movieSearchResultReceived(trimmedKey, movies));\n  } catch (error) {\n    console.error(error);\n  } finally {\n    yield put(setIsSearchFetching(false));\n  }\n}\n\nexport function* watchSearchValue() {\n  yield takeEvery(setSearchValue.toString(), searchMoviesSaga);\n}\n\nfunction* fetchMovieSaga(action) {\n  const { id } = action.payload;\n  yield put(addMovieToActiveList(id));\n\n  if (getMovies(yield select())[id]) {\n    return;\n  }\n\n  try {\n    const movie = yield call(api.getMovie, id);\n    yield put(movieReceived(movie));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function* watchFetchMovie() {\n  yield takeEvery(fetchMovie.toString(), fetchMovieSaga);\n}\n","import { all } from 'redux-saga/effects';\n\nimport { watchFetchMovie, watchSearchValue } from './movies/sagas';\n\nexport default function* rootSaga() {\n  yield all([watchSearchValue(), watchFetchMovie()]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\n\nconst configureStore = preloadedState => {\n  const sagaMiddleware = createSagaMiddleware();\n  const loggerMiddleware = createLogger({\n    collapsed: true,\n  });\n\n  const store = createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(sagaMiddleware, loggerMiddleware),\n  );\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot && process.env.NODE_ENV !== 'production') {\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(rootReducer);\n    });\n  }\n\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Slide from '@material-ui/core/Slide';\n\nconst HideOnScroll = ({ children }) => {\n  const trigger = useScrollTrigger();\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n};\n\nHideOnScroll.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default HideOnScroll;\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Item from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(() => ({\n  item: {\n    height: 48,\n    '&:hover $deleteButton': {\n      opacity: 1,\n    },\n  },\n  button: {\n    height: 48,\n  },\n  activeItem: {\n    backgroundColor: '#EDEDED',\n  },\n  edit: {\n    width: '100%',\n  },\n  textField: {\n    margin: 0,\n    width: '100%',\n  },\n  input: {\n    '&::before': {\n      borderBottomColor: 'transparent',\n    },\n  },\n  deleteButton: {\n    opacity: 0,\n    '&:focus': {\n      opacity: 1,\n    },\n  },\n}));\n\nconst ListItem = ({\n  active,\n  deleteList,\n  isNewItem,\n  label,\n  renameList,\n  setActiveList,\n}) => {\n  const classes = useStyles();\n  const inputEl = useRef(null);\n  const placeholder = '(new list)';\n\n  useEffect(() => {\n    if (inputEl && inputEl.current && isNewItem) {\n      inputEl.current.focus();\n    }\n  });\n\n  const handleChange = event => renameList(event.target.value);\n\n  return (\n    <Item\n      button={!active}\n      ContainerProps={{\n        className: `${classes.item} ${active ? classes.activeItem : ''}`,\n      }}\n      classes={{ button: classes.button }}\n      onClick={active ? undefined : setActiveList}\n    >\n      {active ? (\n        <Box className={classes.edit}>\n          <TextField\n            className={classes.textField}\n            InputProps={{ className: classes.input }}\n            inputRef={inputEl}\n            onChange={handleChange}\n            placeholder={placeholder}\n            value={label}\n          />\n        </Box>\n      ) : (\n        <ListItemText primary={label || placeholder} />\n      )}\n      <ListItemSecondaryAction>\n        <IconButton\n          aria-label=\"delete\"\n          className={classes.deleteButton}\n          edge=\"end\"\n          onClick={deleteList}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </Item>\n  );\n};\n\nListItem.propTypes = {\n  active: PropTypes.bool.isRequired,\n  deleteList: PropTypes.func.isRequired,\n  isNewItem: PropTypes.bool.isRequired,\n  label: PropTypes.string.isRequired,\n  renameList: PropTypes.func.isRequired,\n  setActiveList: PropTypes.func.isRequired,\n};\n\nexport default ListItem;\n","import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport * as listActions from 'state/lists/actions';\nimport { getActiveList, getLists } from 'state/lists/selectors';\nimport ListItem from './ListItem';\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n}));\n\nconst Lists = ({\n  activeList,\n  addList,\n  deleteList,\n  lists,\n  renameList,\n  setActiveList,\n}) => {\n  const classes = useStyles();\n  const prevLists = useRef();\n\n  useEffect(() => {\n    prevLists.current = lists;\n  });\n\n  return (\n    <>\n      <div className={classes.header}>\n        <Typography variant=\"subtitle1\">My lists</Typography>\n        <IconButton color=\"primary\" onClick={addList}>\n          <AddIcon />\n        </IconButton>\n      </div>\n      <Paper>\n        <List component=\"nav\">\n          {lists.map(({ id, label }) => (\n            <ListItem\n              key={id}\n              active={id === activeList}\n              deleteList={() => deleteList(id)}\n              id={id}\n              isNewItem={Boolean(\n                prevLists &&\n                  prevLists.current &&\n                  prevLists.current.every(list => list.id !== id),\n              )}\n              label={label}\n              renameList={value => renameList(id, value)}\n              setActiveList={() => setActiveList(id)}\n            />\n          ))}\n        </List>\n      </Paper>\n    </>\n  );\n};\n\nLists.propTypes = {\n  activeList: PropTypes.number,\n  addList: PropTypes.func.isRequired,\n  deleteList: PropTypes.func.isRequired,\n  lists: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  renameList: PropTypes.func.isRequired,\n  setActiveList: PropTypes.func.isRequired,\n};\n\nLists.defaultProps = {\n  activeList: undefined,\n};\n\nconst mapStateToProps = state => ({\n  activeList: getActiveList(state),\n  lists: getLists(state),\n});\n\nconst mapDispatchToProps = {\n  addList: listActions.addList,\n  deleteList: listActions.deleteList,\n  renameList: listActions.renameList,\n  setActiveList: listActions.setActiveList,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Lists);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport DataTable from '@material-ui/core/Table';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport * as listActions from 'state/lists/actions';\nimport { getMoviesForActiveList } from 'state/movies/selectors';\n\nconst highlightBackground = '#EDEDED';\nconst useStyles = makeStyles(() => ({\n  root: {\n    overflow: 'auto',\n  },\n  row: {\n    height: 96,\n    '&:hover': {\n      backgroundColor: highlightBackground,\n    },\n    '&:focus-within': {\n      backgroundColor: highlightBackground,\n    },\n    '&:hover $icons': {\n      opacity: 1,\n      backgroundColor: highlightBackground,\n    },\n    '&:focus-within $icons': {\n      opacity: 1,\n      backgroundColor: highlightBackground,\n    },\n  },\n  loading: {\n    opacity: 0.4,\n    backgroundColor: 'rgba(0, 0, 0, .2)',\n  },\n  cell: {\n    padding: '8px 12px',\n  },\n  button: {\n    padding: 6,\n  },\n  iconCell: {\n    position: 'relative',\n    overflow: 'hidden',\n  },\n  icons: {\n    position: 'absolute',\n    left: 0,\n    transform: 'translate(0, calc(-50% - 1em + 4px))',\n    display: 'flex',\n    flexDirection: 'column',\n    opacity: 0,\n  },\n}));\n\nconst Table = ({ moveDown, moveUp, movies, remove }) => {\n  const classes = useStyles();\n\n  const columns = [\n    {\n      header: '#',\n      className: classes.iconCell,\n      content: (movie, index) => (\n        <>\n          {index + 1}\n          <div className={classes.icons}>\n            <IconButton\n              className={classes.button}\n              onClick={() => moveUp(movie.imdbId)}\n            >\n              <ArrowDropUpIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              className={classes.button}\n              onClick={() => remove(movie.imdbId)}\n            >\n              <DeleteIcon fontSize=\"small\" />\n            </IconButton>\n            <IconButton\n              className={classes.button}\n              onClick={() => moveDown(movie.imdbId)}\n            >\n              <ArrowDropDownIcon fontSize=\"small\" />\n            </IconButton>\n          </div>\n        </>\n      ),\n    },\n    {\n      header: 'Poster',\n      content: movie => <img src={movie.poster} alt=\"\" width=\"50\" />,\n    },\n    {\n      header: 'Title',\n      content: movie => movie.title,\n    },\n    {\n      header: 'Year',\n      content: movie => movie.year,\n    },\n    {\n      header: 'Genre',\n      content: movie => movie.genre,\n    },\n    {\n      header: 'IMDb',\n      content: movie => (\n        <Link href={`https://www.imdb.com/title/${movie.imdbId}/`}>\n          {movie.imdbId}\n        </Link>\n      ),\n    },\n    {\n      header: 'Rating',\n      content: movie => movie.rating,\n    },\n  ];\n\n  return (\n    <Paper className={classes.root}>\n      <DataTable stickyHeader>\n        <TableHead>\n          <TableRow>\n            {columns.map(({ header }) => (\n              <TableCell key={header} className={classes.cell}>\n                {header}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {movies.map((movie, index) => (\n            <TableRow\n              key={movie.imdbId}\n              className={`${classes.row} ${\n                movie.title === undefined ? classes.loading : ''\n              }`}\n            >\n              {columns.map(({ className, content, header }) => (\n                <TableCell\n                  key={header}\n                  className={`${classes.cell} ${className || ''}`}\n                >\n                  {content(movie, index)}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableBody>\n      </DataTable>\n    </Paper>\n  );\n};\n\nTable.propTypes = {\n  moveDown: PropTypes.func.isRequired,\n  moveUp: PropTypes.func.isRequired,\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      genre: PropTypes.string,\n      imdbId: PropTypes.string.isRequired,\n      poster: PropTypes.string,\n      rating: PropTypes.string,\n      title: PropTypes.string,\n      year: PropTypes.string,\n    }),\n  ).isRequired,\n  remove: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  movies: getMoviesForActiveList(state),\n});\n\nconst mapDispatchToProps = {\n  moveDown: listActions.moveMovieDownInActiveList,\n  moveUp: listActions.moveMovieUpInActiveList,\n  remove: listActions.removeMovieFromActiveList,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Table);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Select from 'react-select';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport * as movieActions from 'state/movies/actions';\nimport {\n  getOptionsForCurrentSearch,\n  getSearchValue,\n  isSearchFetching,\n} from 'state/movies/selectors';\n\nconst Search = ({ fetchMovie, isLoading, options, setValue, value }) => {\n  const handleInputChange = newValue => {\n    setValue(newValue);\n  };\n  const handleChange = selected => {\n    fetchMovie(selected.value);\n  };\n\n  return (\n    <Box my={2}>\n      <Select\n        filterOption={null}\n        isLoading={isLoading}\n        onChange={handleChange}\n        onInputChange={handleInputChange}\n        options={options}\n        placeholder=\"Add a movie\"\n        value={value}\n      />\n    </Box>\n  );\n};\n\nSearch.propTypes = {\n  fetchMovie: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  setValue: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  isLoading: isSearchFetching(state),\n  options: getOptionsForCurrentSearch(state),\n  value: getSearchValue(state),\n});\n\nconst mapDispatchToProps = {\n  fetchMovie: movieActions.fetchMovie,\n  setValue: movieActions.setSearchValue,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(Search);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport HideOnScroll from './HideOnScroll';\nimport Lists from './Lists';\nimport Movies from './Movies';\nimport Search from './Search';\n\nconst footerHeight = 40;\nconst useStyles = makeStyles(() => ({\n  content: {\n    minHeight: `calc(100vh - ${footerHeight}px)`,\n  },\n  footer: {\n    height: footerHeight,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <CssBaseline />\n      <HideOnScroll>\n        <AppBar>\n          <Toolbar>\n            <Typography variant=\"h6\">My movie lists</Typography>\n          </Toolbar>\n        </AppBar>\n      </HideOnScroll>\n      <div className={classes.content}>\n        <Toolbar />\n        <Container>\n          <Box my={2}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={4} lg={3}>\n                <Lists />\n              </Grid>\n              <Grid item xs={12} md={8} lg={9}>\n                <Movies />\n                <Search />\n              </Grid>\n            </Grid>\n          </Box>\n        </Container>\n      </div>\n      <div className={classes.footer}>\n        <p>\n          {`The site uses `}\n          <Link href=\"http://www.omdbapi.com/\">OMDb API</Link>\n          {'.'}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport configureStore from 'state/store';\nimport App from 'view/App';\n\nconst store = configureStore();\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'),\n  );\n};\n\nrenderApp();\n\nif (module.hot && process.env.NODE_ENV !== 'production') {\n  module.hot.accept('view/App', renderApp);\n}\n"],"sourceRoot":""}